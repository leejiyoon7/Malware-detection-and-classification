import glob
import numpy as np
from PIL import Image
from sklearn.model_selection import train_test_split

# 대상 경로 지정
caltech_dir = "E:/정보보호/virus"
# 대상 경로안 폴더 나열 (카테고리)
categories = ["Backdoor", "Constructor", "Exploit", "Flooder", "Hoax", "Rootkit", "Trojan", "Virus", "Worm", "HackTool"]
nb_classes = len(categories)

# 이미지의 크기 균일화를 위한 사이즈 지정
image_w = 32
image_h = 64

# 데이터셋을 저장할 배열 선언
X = []
Y = []

# 카테고리 개수만큼 반복
for idx, cat in enumerate(categories):
    # 카테고리별로 라벨 지정
    label = [0 for i in range(nb_classes)]
    label[idx] = 1

    # 파일 경로를 불러와서 파일길이 출력
    image_dir = caltech_dir + "/" + cat
    print(image_dir)
    files = glob.glob(image_dir+"/*.png")
    print(cat, "파일 길이 : ", len(files))

    # 카테고리안 파일 개수만큼 반복
    for i, f in enumerate(files):
        # 이미지를 불러와서 사이즈 변환 후 255로 나누어 0과 1사이의 값으로 변환
        img = Image.open(f)
        img = img.convert("L")
        img = img.resize((image_w, image_h))
        data = np.asarray(img).astype('float32')/255

        # X, Y 배열에 해당 데이터와 라벨값 입력
        X.append(data)
        Y.append(label)

        if i % 10000 == 0:
            print(cat, " : ", f)

# 넘파이 배열로 변환
X = np.array(X)
y = np.array(Y)

# 변환한 배열을 학습데이터와 검증데이터로 분류
X_train, X_test, Y_train, Y_test = train_test_split(X, Y)
print(X_train.shape)
print(X_test.shape)

# 분류한 데이터를 npy파일로 저장
xy = (X_train, X_test, Y_train, Y_test)
np.save("E:/정보보호/image_data.npy", xy)

print("ok", len(Y))