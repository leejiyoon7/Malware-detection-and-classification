import numpy as np
from PIL import Image
from tensorflow.keras.models import load_model

# 학습한 모델을 불러옴
model = load_model('E:/정보보호/10_2.h5')

X = []  # X를 초기화

# 테스트 데이터 개수만큼 반복
for i in range(0, 20):
    # 테스트 데이터의 경로 지정
    path = 'E:/정보보호/data_test/'+str(i)+'.png'
    # 이미지를 불러와 모델에 입력할 수 있게 처리
    img = Image.open(path)
    img = img.convert("L")
    # 이미지의 크기 균등화
    img = img.resize((32, 64))
    # 바이너리 숫자가 0~255임으로 255로 나누어서 0과 1사이값으로 변환
    data = np.asarray(img).astype('float32')/255
    X.append(data)
    # 차원 늘려주기
    X = np.expand_dims(X, 3)

    # 모델에 입력
    pred = model.predict(X)

    max_index = 0
    max_value = 0

    # 모델의 출력값 배열의 크기만큼 반복
    for j in range(0, 10):
        # 가장 큰 수를 찾아 인덱스 저장
        if pred[0][j] > max_value:
            max_value = pred[0][j]
            max_index = j

    # 인덱스에 따라 어떠한 바리러스인지 출력
    if max_index == 0:
        print(str(i)+'.png는 Backdoor입니다.')
    elif max_index == 1:
        print(str(i) + '.png는 Constructor입니다.')
    elif max_index == 2:
        print(str(i) + '.png는 Exploit입니다.')
    elif max_index == 3:
        print(str(i) + '.png는 Flooder입니다.')
    elif max_index == 4:
        print(str(i) + '.png는 Rootkit입니다.')
    elif max_index == 5:
        print(str(i) + '.png는 Hoax입니다.')
    elif max_index == 6:
        print(str(i) + '.png는 Trojan입니다.')
    elif max_index == 7:
        print(str(i) + '.png는 Virus입니다.')
    elif max_index == 8:
        print(str(i) + '.png는 Worm입니다.')
    elif max_index == 9:
        print(str(i) + '.png는 HackTool입니다.')

    # X배열 다시 초기화
    X = []
